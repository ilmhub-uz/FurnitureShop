@page "/categories/detail"
@using FurnitureShop.Admin.Blazor.Dtos;
@inject HttpClient Http

<_CategoryHeader />
@if(Elements.Count <= 0)
{
    <div class="row">
        <h4 class="fw-bold py-3 mb-2">Categories</h4>
        <div class="col-lg-8 col-12 mb-4">
            <div class="card h-100">
                <div class="row h-100">
                    <div class="col-sm-12">
                        <div class="d-flex align-items-end h-100 justify-content-center mt-sm-0 mt-3">
                            <img src="/assets/img/illustrations/sitting-girl-with-laptop-light.png" class="img-fluid" alt="Image" data-app-light-img="illustrations/sitting-girl-with-laptop-light.png" data-app-dark-img="illustrations/sitting-girl-with-laptop-dark.png" width="120">
                            <h3 class="fw-bold py-3 mb-2" style="margin-left:10px">There is no any categories</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-12 mb-4">
            <div class="card h-100">
                <div class="row h-100">
                    <div class="col-sm-12">
                        <div class="card-body text-sm-center text-center">
                        <button type="submit" data-bs-toggle="offcanvas" data-bs-target="#offcanvasAddCategory" class="btn btn-primary mb-3 text-nowrap add-new-role">Add New Category</button>
                        <p class="mb-0">You can create new category</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else {
<div class="row">
    @foreach(var element in Elements){
    <div class="col-md-6 mb-6">
    <div class="card h-100">
        <div class="card-header d-flex align-items-center justify-content-between">
        <h5 class="card-title m-0 me-2">@element.Name</h5>
        <div class="dropdown">
            <button class="btn p-0" type="button" id="teamMemberList" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <i class="bx bx-dots-vertical-rounded"></i>
            </button>
            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="teamMemberList" style="">
            <a href="#">Delete</a>
            </div>
        </div>
        </div>
        <div class="table-responsive">
        <table class="table table-borderless">
            @if(element.Children is not null)
            {
            <thead>
            <tr>
                <th>Name</th>
                <th>Status</th>
                <th>Products</th>
            </tr>
            </thead>
                <tbody>
                @foreach(var child in element.Children)
                {
                    var url = $"https://picsum.photos/200/300?random={child.Id}";
                    <tr>
                        <td>
                        <div class="d-flex justify-content-start align-items-center">
                            <div class="avatar me-2">
                            <img src="@url" alt="@child.Name" class="rounded-circle">
                            </div>
                            <div class="d-flex flex-column">
                            <h6 class="mb-0 text-truncate">@child.Name</h6><small class="text-truncate text-muted">Child category</small>
                            </div>
                        </div>
                        </td>
                        <td><span class="badge bg-label-primary rounded-pill text-uppercase">category</span></td>
                        <td><small class="fw-semibold">@rnd.Next(1,100)/@rnd.Next(100,135)</small></td>
                    </tr>
                }
                </tbody>
            }
        </table>
        </div>
    </div>
    </div>
    }
</div>
}
@code { 
    Random rnd = new Random();
    public async void DeleteOrganizationById(int categoryId)
    {
        await Http.DeleteAsync($"https://localhost:7237/api/categories/{categoryId}");
    }

    private HashSet<CategoryView> selectedItems = new HashSet<CategoryView>();
    private List<CategoryView> Elements = new List<CategoryView>();
    private string _selectedItemText = "No row clicked";
    private string searchString1 = "";
    private MudTable<CategoryView> _table;
    
    protected override async Task OnInitializedAsync()
    {
        Elements = await Http.GetFromJsonAsync<List<CategoryView>>("https://localhost:7237/api/categories");
    }
}